name: Backend - Release CI/CD

on:
  push:
    branches:
      - 'release/*'

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    environment: staging

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: gwijkuop78-
          POSTGRES_DB: banco_mensal
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Clonar o repositório
        uses: actions/checkout@v3

      - name: Configurar o JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Instalar dependências
        run: mvn install -DskipTests

      - name: Executar testes
        run: mvn test

  build_and_push_docker:
    needs: build_and_test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Clonar o repositório
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build e push da imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/springboot-backend:${{ github.sha }}

  notify:
    needs: build_and_push_docker
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Enviar notificação via Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: job,commit,repo
::contentReference[oaicite:0]{index=0}
 
